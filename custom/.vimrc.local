set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme desert
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" custom
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
if exists('$TMUX')
  set clipboard=
else
  set clipboard=unnamed
endif

set fileencodings=utf-8,gbk

set guifont=Menlo:h14
set guioptions-=m
set guioptions-=T

colorscheme solarized
set background=light

set nobomb
set nowrap

set foldmethod=indent
set foldlevel=99
set cc=80

set completeopt=longest,menu ",preview
" let g:SuperTabDefaultCompletionType = '<c-x><c-u>'
let g:acp_enableAtStartUp = 0
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'
let g:neocomplcache_disable_auto_complete = 0

let g:gitgutter_highlight_lines = 1

let g:syntastic_javascript_checkers = ["jshint"]
let g:JSHintUpdateWriteOnly = 1
let g:JSHintHighlightErrorLine = 1
" let g:jshint_highlight_color = "Red"

" nmap <leader>ff :!js-beautify -f % -r<CR>
autocmd FileType javascript noremap <buffer> <c-f> :call JsBeautify()<cr>
autocmd FileType css noremap <buffer> <c-f> :call HtmlBeautify()<cr>
autocmd FileType html noremap <buffer> <c-f> :call CSSBeautify()<cr>
nmap <leader>gg :!gofmt -w -tabs=false -tabwidth=4 %<CR>
nmap <leader>pp :!autopep8 -i %<CR>
nmap <leader>cc :cd %:h<CR>
nmap <leader>hh :% ! php_beautifier -a --filters "Default() ArrayNested()"<CR>

" cscope
if has("cscope")
    set csprg=/usr/local/bin/cscope
    set csto=0
    set cst
    set nocsverb
    " add any database in current directory
    if filereadable("cscope.out")
        cs add cscope.out
    " else add database pointed to by environment
    elseif $CSCOPE_DB != ""
        cs add $CSCOPE_DB
    endif
    set csverb
endif

" Vim plugins for Go
let g:neocomplcache_omni_patterns.go = '\h\w*\.'
" filetype off
" filetype plugin indent off
" set rtp+=$GOROOT/misc/vim
" filetype plugin indent on
" syntax on
